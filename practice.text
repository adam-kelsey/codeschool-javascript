Wanted to post question and answer, but I think it would be illegal since its a paid course. Just posting my attempts/answers.

This is the codeschool course, I know it is starting off too basic but its a good review and will move into more difficult things.



Javascript arrays

1.
list[3] = 4

2.
var list = [1, 2, 3, 4, 5, 6, 7, 8, 9]
list.push(10)

3.
A-
var values = ["string", 1, true];

4.
values.pop = var bool[]
var bool = values.pop()

5.
var infant = eightiesMovies[1, 4]
var infant = eightiesMovies[1][4]

6.
alert(eightiesMovies[0][0] + " " + eightiesMovies[0][1]);

7.
function numStrings(list) {
  var count = 0
  for (var i = 0; i < list.length; i++) {
    if (typeof(list)[i] == "string" ) {
      count++;
    };
  };
  return count;
};



Function Expressions

1.
(showing the difference between anonymous functions and function declarations)
var runAway = function () {
  var toAlert = "";
  for (var i = 0; i < 5; i++) {
    toAlert = toAlert + "Lions, Tigers, and Bears, Oh My!!\n";
  }
  alert(toAlert); (anonymous function stored in a variable, with a semi colon)
};

2.
storing the results of the function as a variable

var people = 3;
var rain = 4;
var sharks = 5;

var fearGenerated = function(numPeeps, rainInInches, numSharks) {
  var rainFear = numPeeps * rainInInches;
  var sharkFear = numSharks * numSharks * numSharks;
  var totalFear = sharkFear + rainFear;
  return totalFear;
};
var fear = fearGenerated(people, rain, sharks);

3.
(I guess this is just showing you can view the contents of your function without using it?)
alert(fearGenerated);

4.
var fear = fearGenerated(numPeeps, rainInInches, numSharks);

var fearMessage = function() {
  if (fear < 200) {
    return confirm("Fear Level: LOW\nStill wanna ride?");
  } else if (fear >= 200 && fear <= 300) {
    return confirm("Fear Level: MEDIUM\nThink you'll make it?");
  } 
};

function confirmRide(confirmToGo) {
  return confirmToGo();
}

var startRide = confirmRide(fearMessage);




Function expressions with arrays!
1.
var passengers = [ ["Thomas", "Meeks"],
                   ["Gregg", "Pollack"],
                   ["Christine", "Wong"],
                   ["Dan", "McGaw"] ];
var modifiedNames = passengers.map(function(arrayCell) {
  return arrayCell[0] + " " + arrayCell[1];
});

2.
var modifiedNames = [ "Thomas Meeks",
                      "Gregg Pollack",
                      "Christine Wong",
                      "Dan McGaw" ];
modifiedNames.map (function (arrayCell) { alert("Yo, " + arrayCell + "!");});

3.
var puzzlers = [
  function(a) { return 3 * a - 8; },
  function(a) { return (a + 2) * (a + 2) * (a + 2); },
  function(a) { return a*a - 9; },
  function(a) { return a % 4; }
  ];

4. Anonymous functions!
function adventureSelector(userChoice) {
  if (userChoice == 1) {
    return function() {
      alert("You selected the Vines of Doom!");
    };
  } else if (userChoice == 2) {
      return function() {
        alert("Looks like you want the Lake of Despair!");
      };
  } else if (userChoice == 3) {
    return function() {
      alert("The Caves of Catastrophe!");
    };
  }
}

5.
adventureSelector(3)();

6.
var puzzlers = [
  function (a) { return 8*a - 10; },
  function (a) { return (a-3) * (a-3) * (a-3); },
  function (a) { return a * a + 4; },
  function (a) { return a % 5; }
];
var start = 2;

var applyAndEmpty = function (input, queue) {
  var length = queue.length;
  for (var i = 0; i < length; i++) {
    input = queue.shift()(input);
  }
  return input;
};

alert(applyAndEmpty(start, puzzlers));

7.
alert(puzzlers[puzzlers[1](3)](puzzlers[3](9)));





Learning about javascript closures

1.
alert(54)
alert(54); (semicolon gets me everytime!)

2.
alert(40);

3.
alert(122);

4.
function warningMaker(obstacle) {
  return function() {
    alert("Beware! There have been " + obstacle + " sightings in the cove today!");
  };
}

5.
function warningMaker(obstacle) {
  return function() {
    alert("Beware! There have been " + obstacle + " sightings in the Cove today!");
  };
}

var icebergAlert = warningMaker("iceberg");

>> icebergAlert();

6.
